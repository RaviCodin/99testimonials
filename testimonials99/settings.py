"""
Django settings for testimonials99 project.

Generated by 'django-admin startproject' using Django 5.1.4.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

import os
from pathlib import Path
from dotenv import load_dotenv

# Load env
env_loaded = load_dotenv()

if env_loaded:
    BASE_URL = os.getenv("BASE_URL")
    # print(BASE_URL)
else:
    # BASE_URL = "http://127.0.0.1:8000"
    BASE_URL = "https://app.99testimonials.com"
    # print(BASE_URL)

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = "django-insecure-j574s$ffo-7yv%#tho67@5n7(l!i7mj(tlk2x^mhe@wkmmoh^%"

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = [
    "localhost",
    "127.0.0.1",
    "192.168.29.192",
    "13.233.133.193",
    "app.99testimonials.com",
    "127.0.0.1:8000",
    "13.233.194.53",
    "*",
]


# Application definition

INSTALLED_APPS = [
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    "django.contrib.sites",
    # installed apps
    "rest_framework",
    "rest_framework.authtoken",
    "allauth",
    "allauth.account",
    "allauth.socialaccount",
    "allauth.socialaccount.providers.google",
    "dj_rest_auth",
    "drf_yasg",
    "corsheaders",
    # our apps
    "projects",
    "testimonials",
    "campaigns",
    "embeds",
    "accounts",
    "payments",
    "landing_pages",
    "displays",
    "django_extensions",
]

MIDDLEWARE = [
    "corsheaders.middleware.CorsMiddleware",  # Added CORS middleware
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
    # all auth middleware
    "allauth.account.middleware.AccountMiddleware",
    "testimonials99.middleware.CampaignDomainMiddleware",  # Add the new middleware here
]

ROOT_URLCONF = "testimonials99.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [os.path.join(BASE_DIR, "templates")],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "testimonials99.wsgi.application"


# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.sqlite3",
        "NAME": BASE_DIR / "db.sqlite3",
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = "en-us"

TIME_ZONE = "UTC"

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

STATIC_URL = "static/"

# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"


SITE_ID = 1

REST_FRAMEWORK = {
    "DEFAULT_AUTHENTICATION_CLASSES": [
        "rest_framework.authentication.TokenAuthentication",  # Token-based auth
    ],
    "DEFAULT_PERMISSION_CLASSES": [
        # Restrict access to authenticated users
        # 'rest_framework.permissions.IsAuthenticated',
    ],
}

ACCOUNT_AUTHENTICATION_METHOD = "email"
ACCOUNT_EMAIL_REQUIRED = True
ACCOUNT_USERNAME_REQUIRED = False

# Use SMTP for production
EMAIL_BACKEND = "django.core.mail.backends.smtp.EmailBackend"
EMAIL_HOST = "smtp.zeptomail.com"
EMAIL_PORT = 587
EMAIL_USE_TLS = True
EMAIL_HOST_USER = "emailapikey"
EMAIL_HOST_PASSWORD = "wSsVR61x/R73B/0smDekcbo8nFtXVFjyQBh1i1vyuH/5GfvK/cdolkaaBATxGqVNRWVtEzNBpuorkEtW22EGjI9/nAwGCyiF9mqRe1U4J3x17qnvhDzOW2lYlhGJL4IIwwhimWdhFsgi+g=="

SOCIALACCOUNT_PROVIDERS = {
    "google": {
        "SCOPE": [
            "profile",
            "email",
        ],
        "AUTH_PARAMS": {
            "access_type": "online",
        },
        "APP": {
            "client_id": "817486202475-76rt589p0h2q4jvt69rrkjiq4c454e2v.apps.googleusercontent.com",
            "secret": "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",
        },
    }
}


AUTHENTICATION_BACKENDS = [
    "django.contrib.auth.backends.ModelBackend",
    "allauth.account.auth_backends.AuthenticationBackend",
]


SWAGGER_SETTINGS = {
    "SECURITY_DEFINITIONS": {
        "Token": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header",
            "description": "Enter your token as: Bearer <token>",
        },
    },
    "USE_SESSION_AUTH": False,  # Disable session authentication in Swagger UI
}


# Static files (CSS, JavaScript, Images)
STATIC_URL = "/static/"
STATICFILES_DIRS = [os.path.join(BASE_DIR, "static")]
# for `collectstatic` in production
STATIC_ROOT = os.path.join(BASE_DIR, "staticfiles")


MEDIA_URL = "/media/"
MEDIA_ROOT = os.path.join(BASE_DIR, "media")


DODO_PAYMENTS_API_KEY = (
    # test
    # "P+cWW2uAdHgDAYO9.gbhoA87u6uEfgVzSisY8i1rBH1CXA2Rq0dLEIuxIJIOPavH2"
    "1lj0qifUcMQ0oCCM.tfYnqGfpubTX4q4sizapfj9RIfw_IgbugIe2tcXy6D6c1Gsb"
    # live
    # "s6uSVD6ekHM1rn8N.-fjr7Y-sHt3DX7YSle-_RzX5yR6tnuT4s0TRvz9lsuCZZO1w"
)


CORS_ALLOW_ALL_ORIGINS = True  # Allow all origins

# Allow credentials to be included in cross-origin requests
CORS_ALLOW_CREDENTIALS = True

CSRF_TRUSTED_ORIGINS = [
    "https://app.99testimonials.com/",
    "https://app.99testimonials.com",
    "http://localhost:5173",
    "http://127.0.0.1:5173",
    "http://localhost:8000",  # Add your static file server URL if different
    "http://127.0.0.1:8000",  # Add your static file server URL if different
]


REST_USE_JWT = True
JWT_AUTH_COOKIE = "access"
JWT_AUTH_REFRESH_COOKIE = "refresh"


DEFAULT_PAYMENT_PLAN_ID = 1
MAIN_DOMAIN = "app.99testimonials.com"


CLIENT_ID = "817486202475-76rt589p0h2q4jvt69rrkjiq4c454e2v.apps.googleusercontent.com"
CLIENT_SECRET = "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"


# Live payment Key - ravi
# product id : pdt_FyLfCR0yvrU3wQaU7akad
# API KEY : s6uSVD6ekHM1rn8N.-fjr7Y-sHt3DX7YSle-_RzX5yR6tnuT4s0TRvz9lsuCZZO1w
